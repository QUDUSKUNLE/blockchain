{
  "contractName": "Insurance",
  "abi": [
    {
      "inputs": [],
      "name": "insurance",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"insurance\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Insurance.sol\":\"Insurance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Insurance.sol\":{\"keccak256\":\"0xb7fc47c4692c1d34fe951a6493a4b531a8e52a9a8885f5ad7dff320283ac80ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6dc78c2a01a915db4dd3552a7175021402f31aea1768f1236d4f75002f8383c\",\"dweb:/ipfs/QmRMiXtEc1syo7JaopT9hXewqqLQXe96z1EZPWRsbon6pZ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nabstract contract Insurance {\n  uint a;\n  string message;\n  constructor() {\n    message = 'Welcome to Insurance Policy';\n  }\n  function insurance() view public returns (string memory) {\n    return message;\n  }\n}\n",
  "sourcePath": "/Users/andeladeveloper/Software Architects/Blockchain/hello-world/contracts/Insurance.sol",
  "ast": {
    "absolutePath": "project:/contracts/Insurance.sol",
    "exportedSymbols": {
      "Insurance": [
        33
      ]
    },
    "id": 34,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Insurance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33
        ],
        "name": "Insurance",
        "nameLocation": "84:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "a",
            "nameLocation": "103:1:1",
            "nodeType": "VariableDeclaration",
            "scope": 33,
            "src": "98:6:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "98:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "message",
            "nameLocation": "115:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 33,
            "src": "108:14:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "108:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "140:50:1",
              "statements": [
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "146:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "57656c636f6d6520746f20496e737572616e636520506f6c696379",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "156:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_dd6218d75ab7c458c0e899a8720551e239eb5e48d7d52b18251ccb036c8626ac",
                        "typeString": "literal_string \"Welcome to Insurance Policy\""
                      },
                      "value": "Welcome to Insurance Policy"
                    },
                    "src": "146:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "146:39:1"
                }
              ]
            },
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "137:2:1"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:0:1"
            },
            "scope": 33,
            "src": "126:64:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "250:25:1",
              "statements": [
                {
                  "expression": {
                    "id": 29,
                    "name": "message",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "263:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 28,
                  "id": 30,
                  "nodeType": "Return",
                  "src": "256:14:1"
                }
              ]
            },
            "functionSelector": "89cf3204",
            "id": 32,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insurance",
            "nameLocation": "202:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:1"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "235:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "234:15:1"
            },
            "scope": 33,
            "src": "193:82:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "66:211:1",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:246:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-20T12:42:20.024Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}